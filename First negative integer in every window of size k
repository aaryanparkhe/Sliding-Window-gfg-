class Compute {
    
    public long[] printFirstNegativeInteger(long A[], int N, int K)
    {
        long [] res = new long[N-K+1];
        int i=0,j=0,z=0;
        
        Queue<Long> queue = new ArrayDeque<>();
        while(j<N){
            if(A[j]<0){
                queue.add(A[j]);
            }
            if(j-i+1 < K){
                j++;
            }
            else  if(j-i+1 == K){
                if(queue.size() != 0){
                    res[z++] = queue.peek();
                    if(queue.peek() == A[i]){
                        queue.remove();
                    }
                }
                else {
                    res[z++]=0;
                }
                i++;
                j++;
                
            }
        }
        return res;
    }
}


Time Complexity: O(N)
Auxiliary Space: O(K)
